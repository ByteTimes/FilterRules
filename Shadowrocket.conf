# Shadowrocket 配置文件 #
# ==UserScript==
# @ConfigName        筑梦阁自用的Shadowrocket配置文件
# @website           https://www.dreamstart.site
# @UpdateTime        2023/04/10 18:10 UTC/GMT +8
# @ConfigURL         https://github.com/ByteTimes/FilterRules/raw/Rules/Shadowrocket.conf
# ==/UserScript==


[General]
bypass-system = true
dns-server = 119.29.29.29,114.114.114.114, 223.5.5.5, system 
tun-excluded-routes = 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16, 198.18.0.0/16, 224.0.0.0/4, 255.255.255.255/32
skip-proxy = 10.0.0.0/8, 192.168.0.0/16, 172.16.0.0/12, 100.64.0.0/10, localhost, *.local
update-url = https://github.com/ByteTimes/FilterRules/raw/Rules/Shadowrocket.conf
fallback-dns-server = system
ipv6 = false
prefer-ipv6 = false
dns-fallback-system = false
dns-direct-system = false
icmp-auto-reply = true
always-reject-url-rewrite = false
private-ip-answer = false


[Proxy Group]
# 该配置策略组可实现特定规则走指定策略或节点；如想让netflix走新加坡节点 那么可以在相应代理分组里勾选新加坡节点；
# 更改代理分组策略的步骤(以🎥 Netflix策略为例)：点击界面底部配置--点击配置文件"ⓘ"符号---代理分组---点击🎥 Netflix策略的"ⓘ"符号---勾选🇸🇬 新加坡节点--保存。(新版小火箭只需首页下拉即可调出代理分组界面）

# ♻️ ALL策略表示对所有节点进行测速并选择延迟最低的节点；测速间隔600秒，容差100ms；
# 若不想用某些特定节点 可以通过正则排除 例：♻️ ALL = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=^(?!.*?(国内|限速|试用)).*$
# 也可以让指定机场参与♻️ ALL策略里的测速（根据你设置的机场订阅名称而定 这里不举例）

[policy]
static=终极策略, direct, proxy, 香港节点, 台湾节点, 美国节点, img-url=https://ghproxy.com/https://raw.githubusercontent.com/ByteTimes/FilterRules/Rules/Images/Color/China-map.png
static=广告屏蔽, direct, reject, img-url=https://ghproxy.com/https://raw.githubusercontent.com/ByteTimes/FilterRules/Rules/Images/Color/Available.png
static=全球加速, direct, proxy, 自动选择, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 英国节点, img-url=https://ghproxy.com/https://raw.githubusercontent.com/ByteTimes/FilterRules/Rules/Images/Color/Global.png
static=苹果服务, direct, 香港节点, 台湾节点, 美国节点, img-url=https://ghproxy.com/https://raw.githubusercontent.com/ByteTimes/FilterRules/Rules/Images/Color/Apple.png
static=国际媒体, direct, proxy, 自动选择, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 英国节点, img-url=https://ghproxy.com/https://raw.githubusercontent.com/ByteTimes/FilterRules/Rules/Images/Color/Streaming.png
static=海外版本, direct, 香港节点, 台湾节点, img-url=https://ghproxy.com/https://raw.githubusercontent.com/ByteTimes/FilterRules/Rules/Images/Color/Bilibili.png

#默认设置10分钟测速一次
url-latency-benchmark=自动选择, server-tag-regex=^(.(?!(筑梦阁|dreamstart.site)))*$, check-interval=600, tolerance=0, img-url=https://ghproxy.com/https://raw.githubusercontent.com/ByteTimes/FilterRules/Rules/Images/Color/Auto.png
url-latency-benchmark=香港节点, server-tag-regex=(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|美|英|海外)).)*$, check-interval=600, tolerance=0, img-url=https://ghproxy.com/https://raw.githubusercontent.com/ByteTimes/FilterRules/Rules/Images/Color/country/HK.png
url-latency-benchmark=台湾节点, server-tag-regex=(?=.*(台|TW|(?i)Taiwan))^((?!(港|日|韩|新|美|英|海外)).)*$, check-interval=600, tolerance=0, img-url=https://ghproxy.com/https://raw.githubusercontent.com/ByteTimes/FilterRules/Rules/Images/Color/country/TW.png
url-latency-benchmark=日本节点, server-tag-regex=(?=.*(日|JP|(?i)Japan))^((?!(港|台|韩|新|美|英|海外)).)*$, check-interval=600, tolerance=0, img-url=https://ghproxy.com/https://raw.githubusercontent.com/ByteTimes/FilterRules/Rules/Images/Color/country/JP.png
url-latency-benchmark=韩国节点, server-tag-regex=(?=.*(韩|KR|(?i)Korea))^((?!(港|台|日|新|美|英|海外)).)*$, check-interval=600, tolerance=0, img-url=https://ghproxy.com/https://raw.githubusercontent.com/ByteTimes/FilterRules/Rules/Images/Color/country/KR.png
url-latency-benchmark=狮城节点, server-tag-regex=(?=.*(新|狮|獅|SG|(?i)Singapore))^((?!(港|台|日|韩|美|英|海外)).)*$, check-interval=600, tolerance=0, img-url=https://ghproxy.com/https://raw.githubusercontent.com/ByteTimes/FilterRules/Rules/Images/Color/country/SG.png
url-latency-benchmark=美国节点, server-tag-regex=(?=.*(美|US|(?i)States|American))^((?!(港|台|日|韩|新|英|海外)).)*$, check-interval=600, tolerance=0, img-url=https://ghproxy.com/https://raw.githubusercontent.com/ByteTimes/FilterRules/Rules/Images/Color/country/US.png
url-latency-benchmark=英国节点, server-tag-regex=(?=.*(英|UK|(?i)United Kingdom|Britain|England))^((?!(港|台|日|韩|新|美|海外)).)*$, check-interval=600, tolerance=0, img-url=https://ghproxy.com/https://raw.githubusercontent.com/ByteTimes/FilterRules/Rules/Images/Color/country/UK.png


终极策略 = select, direct, proxy, 香港节点, 台湾节点, 美国节点, interval=600, timeout=5, select=0, url=http://www.gstatic.com/generate_204
广告屏蔽 = select, direct, reject, select=0
全球加速 = select, 自动选择, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 英国节点, select=0
苹果服务 = select, direct, 香港节点, 台湾节点, 美国节点, select=0
国际媒体 = select, proxy, 自动选择, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 英国节点, select=0
海外版本 = select, direct, 香港节点, 台湾节点, select=0


# 以下国家地区节点筛选 请自行根据机场节点名称修改正则
自动选择 = url-test, url=http://www.gstatic.com/generate_204, interval=600, tolerance=100, timeout=5, policy-regex-filter=.*
香港节点 = url-test, url=http://www.gstatic.com/generate_204, interval=600, tolerance=100, timeout=5, policy-regex-filter=(?=.*(港|HK|(?i)Hong))^((?!(台湾|日本|新加坡|美国|韩国|狮城|南朝鲜|US|SG|JP|KR|TW|台灣|美國|韓國|獅城)).)*$
台湾节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=(?=.*(台|TW|(?i)Taiwan))^((?!(港|日|韩|新|美)).)*$
日本节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=(?=.*(日本|JP|(?i)Japan))^((?!(香港|台湾|新加坡|美国|韩国|狮城|南朝鲜|US|SG|KR|HK|TW|台灣|美國|韓國|獅城)).)*$
韩国节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=(?=.*(KR|Korea|KOR|首尔|韩|韓|(?i)Korea))^((?!(香港|台湾|新加坡|美国|狮城|南朝鲜|US|SG|HK|TW|台灣|美國|獅城)).)*$
狮城节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=(?=.*(新加坡|狮城|SG|(?i)Singapore))^((?!(香港|台湾|日本|美国|韩国|南朝鲜|US|JP|KR|HK|TW|台灣|美國|韓國)).)*$
美国节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=(?=.*(美国|美國|US|洛杉矶|西雅图|(?i)States|American))^((?!(香港|台湾|日本|新加坡|韩国|狮城|南朝鲜|SG|JP|KR|HK|TW|台灣|韓國|獅城)).)*$🇷🇺 俄罗斯节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=🇷🇺|俄罗斯|RU|莫斯科|圣彼得堡|喀山|哈尔科夫|乌法|新西伯利亚|下诺夫哥罗德|沃罗涅什
英国节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=🇬🇧|英国|UK|伦敦|英格兰|伯明翰|泰恩河畔纽卡斯尔|利兹|爱丁堡|格拉斯哥|苏格兰


[Rule]
# LocalAreaNetwork/局域网地址---直连
# LocalAreaNetwork.list---DIRECT
RULE-SET,https://ghproxy.com/https://github.com/ByteTimes/FilterRules/raw/Rules/Profiles/RuleSet/LocalAreaNetwork.list, DIRECT

# 广告隐私-运营商劫持---拦截
# Advertising-Privacy-ISPservice---REJECT
# 通用广告-拦截 /Advertising.list,---REJECT
RULE-SET,https://anti-ad.net/surge2.txt, REJECT
# 广告白名单-直连
# RULE-SET,*.list, DIRECT
# 广告关键字-拦截
# RULE-SET,*.list, REJECT
# 应用内广告-拦截
# RULE-SET,*AppAd.list, REJECT

# 海外网络部分---代理
# (DNS Cache Pollution)---PROXY
# 国外域名等规则（轻量级）-代理/ProxyLite.list---PROXY
RULE-SET,https://ghproxy.com/https://github.com/ByteTimes/FilterRules/raw/Rules/Profiles/RuleSet/Global.list, PROXY
# 电报规则-代理/Telegram.list,---PROXY
# RULE-SET,Telegram.list, PROXY
# 国外媒体-代理/ProxyMedia.list,---PROXY
RULE-SET,https://ghproxy.com/https://github.com/ByteTimes/FilterRules/raw/Rules/Profiles/RuleSet/StreamingMedia/Streaming.list, PROXY

# 国内网络部分---直连
# China Area Network---DIRECT
# 国内域名-直连/ChinaDomain.list---DIRECT
# RULE-SET,ChinaDomain.list, DIRECT
# 谷歌国内业务-直连/GoogleCN.list---DIRECT
# RULE-SET,GoogleCN.list, DIRECT
# 国内IP---直连/ChinaIP.list---DIRECT
# RULE-SET,ChinaIP.list, DIRECT
# 国内云服务商IP段-直连/ChinaCompanyIp.list---DIRECT
RULE-SET,https://ghproxy.com/https://github.com/ByteTimes/FilterRules/raw/Rules/Profiles/RuleSet/ASN.China.list, DIRECT

# 苹果服务-直连
# Apple OTA Update---DIRECT/AppleOTA.list---DIRECT
RULE-SET,https://ghproxy.com/https://github.com/ByteTimes/FilterRules/raw/Rules/Profiles/RuleSet/ExtraRules/Apple.list, REJECT

#规则补充
DOMAIN-SUFFIX,playrix.com,PROXY
DOMAIN-SUFFIX,pangolin-sdk-toutiao.com,REJECT

# 规则之外
GEOIP,CN,DIRECT
FINAL,PROXY

[Host]
localhost = 127.0.0.1

[URL Rewrite]
# Redirect Google Search Service
^https?:\/\/(www.)?(g|google)\.cn https://www.google.com 302

# Redirect Google Maps Service
^https?:\/\/(ditu|maps).google\.cn https://maps.google.com 302

# YouTube 广告屏蔽
ctier=[A-Z] citer=A 302
^https://[\s\S]*\.googlevideo\.com/.*&(oad|ctier) _ REJECT-200

# TikTok解锁美区
(?<=_region=)CN(?=&) JP 307
(?<=&mcc_mnc=)4 2 307
^(https?:\/\/(tnc|dm)[\w-]+\.\w+\.com\/.+)(\?)(.+) $1$3 302
(^https?:\/\/*\.\w{4}okv.com\/.+&.+)(\d{2}\.3\.\d)(.+) $118.0$3 302

[Script]

[MITM]
ca-passphrase = Shadowrocket
ca-p12 = 
enable = true
hostname = *.googlevideo.com,*.tiktokv.com,*.byteoversea.com,*.tik-tokapi.com




